@using System.Data
@using System.Data.SqlClient
@using AslLabApi.DataAccess
@using AslLabApi.Models
@using AslLabApi.DataAccess
@model AslLabApi.Models.DTO.OpdDTO

@{
    Layout = null;
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "UserAdmin" || LoggedUserTp == "User") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    Int64 compid = Convert.ToInt64(LoggedCompId);


    string companyName = "", address = "", contactNo = "";
    AslLabApiContext db = new AslLabApiContext();
    var SelectCompanyName = from n in db.AslCompanyDbSet

                            where n.COMPID == compid
                            select new { n.COMPNM, n.ADDRESS, n.CONTACTNO };

    foreach (var n in SelectCompanyName)
    {
        companyName = n.COMPNM;
        address = n.ADDRESS;
        contactNo = n.CONTACTNO;
    }
    var compNm = companyName;
    var Address = address;
    var contactno = contactNo;






    TimeZoneInfo timeZoneInfo;
    timeZoneInfo = TimeZoneInfo.FindSystemTimeZoneById("Central Asia Standard Time");
    DateTime currentDateTime = TimeZoneInfo.ConvertTime(DateTime.Now, timeZoneInfo);

    var fromdate = Model.FromDate;
    var todate = Model.ToDate;

}


<!DOCTYPE html>

<html lang="en">
<head>
    <link href="~/Content/reportcss/style.css" rel="stylesheet" />



</head>
<body style=" background-color:#fafafa;">


    <div style="width: 960px; margin: 0px auto; border: 1px solid #d3d3d3; border-radius: 5px; box-shadow: 0 0 5px rgba(0, 0, 0, 0.1); background: none repeat scroll 0 0 white;">
        <table id="mainTable" border="0" width="100%">
            <thead>
                <tr>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="10%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>
                    <td width="5%"></td>

                </tr>
                <tr style="background-color: #00689b">
                    <td colspan="12">
                        <h3 style="color: white;padding:4px">@compNm</h3>
                        <p style="color:white;padding-left:4px">@Address<span>  @contactno</span></p>
                    </td>

                    <td colspan="6" style="color: white;padding:8px" align="right">
                        Powered By<br />Alchemy Software
                    </td>

                </tr>

                <tr>
                    <td colspan="12" align="left" style="padding: 4px; font-weight: bold">Patient Wise Test Statement</td>
                    <td align="right" colspan="6" style="padding:8px">Print:@currentDateTime.ToString("dd-MM-yy hh:mm tt")</td>
                </tr>
                @{
                    string d = Convert.ToString(fromdate);
                    DateTime fdate = DateTime.Parse(d);
                    string ffdt = fdate.ToString("dd-MMM-yyyy");


                    string d2 = Convert.ToString(todate);
                    DateTime fdate2 = DateTime.Parse(d2);
                    string ffdt2 = fdate2.ToString("dd-MMM-yyyy");
                }
                <tr>
                    <td colspan="6" align="left" style="padding: 4px; font-weight: bold">From: <span>@ffdt</span></td>
                    <td align="left" colspan="6" style="padding:8px; font-weight: bold">To: <span>@ffdt2</span></td>
                </tr>
                <tr style="background-color: #00689b; outline: thin solid">
                    <td colspan="6" style="color: white; padding: 4px; font-size: small" align="center">Patient Information</td>
                    <td colspan="9" style="color: white; padding: 4px; font-size: small" align="center">Test Particulars</td>
                    <td colspan="3" style="color: white; padding: 4px; font-size: small" align="center">Amount</td>


                </tr>
            </thead>

            <tbody>



                @{
                    var TransdtGroup = (from n in db.HMS_OPDMST where n.COMPID == compid && n.TRANSDT >= fromdate && n.TRANSDT <= todate select new { n.TRANSDT }).OrderBy(x => x.TRANSDT).Distinct().ToList();

                    System.Data.SqlClient.SqlConnection conn = new System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["AslLabApiContext"].ToString());
                    string query = string.Format(
                        "SELECT HMS_OPDMST.TRANSDT, HMS_OPDMST.PATIENTID, PATIENTNM, GENDER, AGE, TESTID, AMOUNT FROM HMS_OPDMST " +
                        "INNER JOIN HMS_OPD ON HMS_OPDMST.COMPID = HMS_OPD.COMPID AND HMS_OPDMST.PATIENTID = HMS_OPD.PATIENTID " +
                        "WHERE HMS_OPDMST.COMPID = '{0}' AND HMS_OPDMST.TRANSDT BETWEEN '{1}' AND '{2}' " +
                        "ORDER BY HMS_OPDMST.TRANSDT, HMS_OPDMST.PATIENTID, TESTID",
                        compid, fromdate, todate);
                    System.Data.SqlClient.SqlCommand cmd = new System.Data.SqlClient.SqlCommand(query, conn);
                    conn.Open();
                    SqlDataAdapter da = new SqlDataAdapter(cmd);
                    DataTable ds = new DataTable();
                    da.Fill(ds);

                    string patientname = "", patientid = "", gender = "";
                    Decimal Amount = 0, subTotal = 0, grandTotal = 0, sumPatientprevious = 0;
                    string transdt = "", formatch = "", newdata = "";
                    Int64 testid = 0, age = 0, datacount = 0;
                    Int64 dateprint_hoachekina = 0, howmanyDataHasbyPatient = 0;




                    foreach (var groupDate in TransdtGroup)
                    {
                        dateprint_hoachekina = 0;
                        subTotal = 0;
                        formatch = "";
                        newdata = "";
                        sumPatientprevious = 0;


                        datacount = 0;
                        foreach (DataRow row in ds.Rows)
                        {

                            transdt = row["TRANSDT"].ToString();
                            DateTime tdate = DateTime.Parse(transdt);

                            patientid = row["PATIENTID"].ToString();

                            patientname = row["PATIENTNM"].ToString();
                            if(row["AGE"].ToString()!="")
                            {
                                age = Convert.ToInt64(row["AGE"]);
                            }
                            else
                            {
                                age = 0;
                            }
                            
                            gender = row["GENDER"].ToString();

                            testid = Convert.ToInt64(row["TESTID"]);
                            Amount = Convert.ToDecimal(row["AMOUNT"]);

                            formatch = formatch;
                            sumPatientprevious = sumPatientprevious;


                            if (groupDate.TRANSDT == tdate)
                            {
                                howmanyDataHasbyPatient = Convert.ToInt64((from n in db.HMS_OPD where n.COMPID == compid && n.TRANSDT == tdate && n.PATIENTID == patientid select n).Count());
                                if (dateprint_hoachekina == 0)
                                {
                                    string transdt_convertDate = tdate.ToString("dd-MMM-yyyy");
                                    <tr style="outline:thin solid">
                                        <td colspan="18" style="font-weight: bold">Date : @transdt_convertDate </td>
                                    </tr>
                                    @*<tr style="background-color: #00689b; outline: thin solid">
                                        <td colspan="9" style="color: white; padding: 4px; font-size: small" align="center">Patient Information</td>
                                        <td colspan="6" style="color: white; padding: 4px; font-size: small" align="center">Test Particulars</td>
                                        <td colspan="3" style="color: white; padding: 4px; font-size: small" align="center">Amount</td>


                                    </tr>*@
                                    dateprint_hoachekina = 1;
                                }


                                newdata = patientid + " - " + patientname + " - " +"Age: "+ age + " - " + gender;

                                @*if (formatch != newdata)
                                    {

                                            <tr>
                                            <td colspan="15">
                                                PatientWise Amount:
                                            </td>
                                            <td colspan="3" align="right">@sumPatientprevious</td>
                                        </tr>
                                        sumPatientprevious = 0;


                                    }
                                    else
                                    {
                                        sumPatientprevious = sumPatientprevious;
                                    }*@
                                <tr style="outline:thin solid">
                                    @if (formatch != newdata)
                                    {
                                        <td align="left" colspan="6" style="padding-left: 5px; font-size: small">
                                            @newdata
                                        </td>
                                        formatch = newdata;

                                    }
                                    else
                                    {
                                        <td align="left" colspan="6"></td>


                                    }


                                    @{
                                var testname = (from n in db.HMS_TEST where n.COMPID == compid select n).ToList();
                                    }
                                    @foreach (var testdata in testname)
{
    if (testdata.TESTID == testid)
    {
        <td align="left" colspan="9" style="font-size: small">
            @testdata.TESTNM
        </td>
        break;
    }
}

                                    <td colspan="3" align="right" style="font-size: small">
                                        @Amount
                                    </td>

                                </tr>
                                    datacount++;
                                    subTotal = subTotal + Amount;
                                    sumPatientprevious += Amount;

                            }

                            if (datacount == howmanyDataHasbyPatient)
                            {
                                <tr>
                                    <td colspan="15" align="right" style="font-weight: bold; font-size: small">
                                        Patient wise Total:
                                    </td>
                                    @if (sumPatientprevious < 0)
                                    {
                                        decimal rr = sumPatientprevious * (-1);
                                        string convertamount = Convert.ToString(rr);
                                        string SumPatientprevious = CommainAmount.AmountwithComma(convertamount);
                                        <td colspan="3" align="right" style="font-weight: bold; font-size: small">@SumPatientprevious</td>
                                    }
                                    else
                                    {
                                        string convertamount = Convert.ToString(sumPatientprevious);
                                        string SumPatientprevious = CommainAmount.AmountwithComma(convertamount);
                                        <td colspan="3" align="right" style="font-weight: bold; font-size: small">@SumPatientprevious</td>
                                    }
                                    @*<td colspan="3" align="right" style="font-weight: bold">@sumPatientprevious</td>*@
                                </tr>
                                datacount = 0;
                                sumPatientprevious = 0;
                            }





                        }
                        <tr>
                            <td colspan="15" align="right" style="font-weight: bold; font-size: small">Date Wise Total :</td>
                            @if (subTotal < 0)
                            {
                                decimal rr = subTotal*(-1);
                                string convertamount = Convert.ToString(rr);
                                string SubTotal = CommainAmount.AmountwithComma(convertamount);
                                <td colspan="3" align="right" style="font-weight: bold; font-size: small">@SubTotal</td>
                            }
                            else
                            {
                                string convertamount = Convert.ToString(subTotal);
                                string SubTotal = CommainAmount.AmountwithComma(convertamount);
                                <td colspan="3" align="right" style="font-weight: bold; font-size: small">@SubTotal</td>
                            }
                            @*<td colspan="3" align="right" style="font-weight: bold">@subTotal</td>*@
                        </tr>

                        grandTotal = grandTotal + subTotal;

                    }
                    
                  
                    <tr style="outline: thin solid">
                        <td colspan="15" align="right" style="font-weight: bold; font-size: small">Grand Total :</td>
                        @if (grandTotal < 0)
                        {
                            decimal rr = grandTotal * (-1);
                            string convertamount = Convert.ToString(rr);
                            string GrandTotal = CommainAmount.AmountwithComma(convertamount);
                            <td colspan="3" align="right" style="font-weight: bold; font-size: small">@GrandTotal</td>
                        }
                        else
                        {
                            string convertamount = Convert.ToString(grandTotal);
                            string GrandTotal = CommainAmount.AmountwithComma(convertamount);
                            <td colspan="3" align="right" style="font-weight: bold; font-size: small">@GrandTotal</td>
                        }
                        @*<td colspan="3" align="right" style="font-weight: bold">@grandTotal</td>*@
                    </tr>


                    conn.Close();
                }






            </tbody>
        </table>


    </div>


</body>
</html>
