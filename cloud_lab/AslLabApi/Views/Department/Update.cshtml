@using System.Web.UI.WebControls
@using AslLabApi.Models
@model AslLabApi.Models.DTO.DepartmentDTO

@{
    ViewBag.Title = "Update";




    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    Int64 compid = Convert.ToInt64(LoggedCompId);

    var LoggedUserId = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedUserID"]);

}






@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)







    AslLabApiContext db = new AslLabApiContext();

    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Department Update</h1>
        <div class="btn-group pull-right" id="editOption">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                <i class="fa fa-cog"></i>
            </button>
            <ul class="dropdown-menu pull-right" style="" role="menu">

                <li>
                    <a href="@Url.Action("Create", "Department")"><i class="fa fa-plus"></i> Create</a>
                </li>
                <li>
                    <a href="@Url.Action("Update", "Department")"><i class="fa fa-edit"></i> Update</a>
                </li>
                @*<li>
                    <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                </li>*@

            </ul>
        </div>
    </div>
   
    @Html.HiddenFor(model => model.COMPID, new { id = "txtCompid", @Value = LoggedCompId })
    @Html.HiddenFor(model => model.DepartmentId, new { id = "ID" })
    @Html.HiddenFor(model => model.DepartmentId, new { id = "deptID", @Value = TempData["DeptID"] })
    <div class="col-md-12">
        <div class="form-group">

            <div class="row">
                <div class="col-md-2">
                    @Html.Label("Department Name", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.DepartmentName, new { @class = "form-control", id = "deptName", @placeholder = "Department Name", autofocus = true })

                </div>


                <div class="col-md-2">
                    @Html.Label("Remarks", htmlAttributes: new { @class = "control-label" })
                </div>
                <div class="col-md-3">
                    @Html.TextBoxFor(model => model.Remarks, new { @class = "form-control", id = "remarks" })

                </div>


                




                <div class="col-md-2">



                    <input id="SubmitId" type="submit" class="btn btn-info" value="Update" />



                </div>



            </div>
        </div>
        @{
    var listofdata = (from n in db.HMS_DEPT where n.COMPID==compid select n).ToList();
        }
        @*<div class="panel-heading">Department Information</div>*@
        <div class="table-responsive">
            <table class="table table-striped">
                <tr>

                    <th>
                        Department Name
                    </th>

                    <th>
                       Remarks
                    </th>
                    
                </tr>

                @foreach (var item in listofdata)
                {
                  
                    <tr>

                        <td>
                            @Html.DisplayFor(modelItem => item.DEPTNM)
                        </td>

                        <td>
                            @Html.DisplayFor(modelItem => item.REMARKS)
                        </td>

                       
                    </tr>
                }

            </table>


            @Html.TextBoxFor(model => model.UPDLTUDE, new { id = "latlonPos", style = "display: none;" })
            <input id="lat" type="hidden" />
            <input id="lon" type="hidden" />
        </div>

    </div>
     //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlonPos").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
                $("#latlonRms").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>
    
    <script language="javascript" type="text/javascript">
        $(document).ready(function () {
            $('#deptName').autocomplete({
                source: function (request, response) {


                    $.ajax({
                        url: '@Url.Action("DepartmentListTag", "Department")',
                        dataType: "json",
                        data: {
                            term: request.term

                        },
                        success: function (data) {
                            //response(data);
                            response($.map(data, function (item) {
                                return {
                                    label: item,
                                    value: item
                                };
                            }));
                        }
                    });

                },
                change: $('#deptName').keyup(function (e) {

                    $('#deptName').keyup(_.debounce(txtOneChanged(e.keyCode), 1000));

                }),
              
                select: function (event, ui) {
                    $("#deptName").val(ui.item.label);

                    txtOneChanged();
                }



            });



        });


        function txtOneChanged(value) {

            if (value != 8) {
                var changedText = $("#deptName").val();


                var Name = document.getElementById('deptName');
                var txtBox = document.getElementById('deptID');
                var txtBox2 = document.getElementById('remarks');

                var txtbox3 = document.getElementById('ID');

                if (changedText != "") {

                    $.getJSON(
                        '/Department/DynamicautocompleteDept', { "ChangedText": changedText },
                        function (result) {
                            Name.value = result.DepartmentName;
                            txtBox.value = result.DeptID;
                            txtBox2.value = result.REMARKS;
                            if (result.DeptID != 0) {
                                txtbox3.value = $("#deptID").val();
                            }

                            //document.getElementById("categoryName").focus();
                        });
                   
                }
                if ($("#deptID").val() != "") {
                    txtbox3.value = $("#deptID").val();
                }

            }



        }
    </script>
    <style type="text/css">
        .ui-autocomplete {
            position: absolute;
            cursor: default;
            background: #f0ffff;
            max-height: 200px; /*scroll box height*/
            overflow-y: auto;
            /* prevent horizontal scrollbar */
            overflow-x: hidden;
            /* add padding to account for vertical scrollbar */
            padding-right: 20px;
        }
    </style>






}


<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />

<script src="~/Scripts/jquery-1.9.1.min.js"></script>

<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>

<script src="~/Scripts/Underscore.js"></script>


