@using AslLabApi.Models
@model AslLabApi.Models.DTO.TestMasterDTO

@{
    ViewBag.Title = "Update";
    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    var LoggedUserId = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedUserID"]);

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "AslSuperadmin") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }
    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    Int64 compid = Convert.ToInt64(LoggedCompId);

    AslLabApiContext db = new AslLabApiContext();
    
    List<SelectListItem> listdept = new List<SelectListItem>();
    var listofDept = (from n in db.HMS_DEPT where n.COMPID == compid select n).ToList();
    foreach (var item in listofDept)
    {
        listdept.Add(new SelectListItem { Text = item.DEPTNM, Value = Convert.ToString(item.DEPTID) });
    }

    List<SelectListItem> listTop = new List<SelectListItem>();

    listTop.Add(new SelectListItem { Text = "Yes", Value = "Y" });
    listTop.Add(new SelectListItem { Text = "No", Value = "N" });
}



<link href="~/Content/newcss/jquery-ui.css" rel="stylesheet" />


<link href="~/Content/newcss/ng-grid.css" rel="stylesheet" />
<link rel="stylesheet" href="~/Content/style.css" />








<script src="~/Content/jquery1.8.0/jquery.min.js"></script>


<script src="~/Content/jquery1.9.1/jquery-1.9.1.js"></script>


<script src="~/Content/jquery1.10.3/jquery-ui.js"></script>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)
    
     <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Test Category Information - Update</h1>

        <div class="btn-group pull-right" id="editOption">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                <i class="fa fa-cog"></i>
            </button>
            <ul class="dropdown-menu pull-right" style="" role="menu">

                <li>
                    <a href="@Url.Action("Index", "TestMaster")"><i class="fa fa-plus"></i> Create</a>
                </li>
                <li>
                    <a href="@Url.Action("Update", "TestMaster")"><i class="fa fa-edit"></i> Update</a>
                </li>
                @*<li>
                    <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                </li>*@

            </ul>
        </div>
    </div>
    <br />

    <div ng-app="testmasterApp2" data-ng-controller="ApiTestMasterController2" @*class="container"*@>
        @Html.HiddenFor(model => model.COMPID, new { id = "txtcompid", style = "width:3em;", @Value = compid })
        @Html.TextBoxFor(model => model.UPDLTUDE, new { id = "latlonPos", style = "display: none;" })
        <input id="lat" type="hidden" />
        <input id="lon" type="hidden" />
        @Html.TextBoxFor(model => model.UPDUSERID, new { id = "UpUserID", style = "display: none;", @Value = LoggedUserId })

        <table class="table table-bordered table-hover" style="width: 900px">

            <tr>

                <td><label>Test Category Name:</label></td>
                <td><label>Department Name:</label></td>
                <td><label>Top:</label></td>
                <td></td>
                @*<td><input type="submit" value="Insert" data-ng-click="addrow($event)" class="btn btn-primary" /></td>*@


            </tr>
            <tr data-ng-repeat="testmaster in TestMasterHead">



                <td hidden>
                    <p data-ng-hide="testmaster.editMode">{{ testmaster.TestCatId }}</p>

                </td>


                <td>
                    <p data-ng-hide="testmaster.editMode">{{ testmaster.TestCatName }}</p>

                    <input data-ng-show="testmaster.editMode" type="text" data-ng-model="testmaster.TestCatName" @*id="gridTestCatName"*@ />
                </td>

                <td>
                    <p data-ng-hide="testmaster.editMode">{{ testmaster.DepartmentName }}</p>
                    @*@Html.DropDownListFor(model => model.DepartmentId, listdept, "--Select--", new { id = "DepartmentId", @class = "form-control" })*@
                    @Html.DropDownListFor(model => model.DepartmentId, listdept, "-Select-", new { data_ng_show = "testmaster.editMode", data_ng_model = "testmaster.DepartmentId", @class = "form-control input-sm" })
                </td>
                <td>
                    <p data-ng-hide="testmaster.editMode">{{ testmaster.TopYesNo }}</p>
                    @*@Html.DropDownListFor(model => model.DepartmentId, listdept, "--Select--", new { id = "DepartmentId", @class = "form-control" })*@
                    @Html.DropDownListFor(model => model.TopYesNo, listTop, "-Select-", new { data_ng_show = "testmaster.editMode", data_ng_model = "testmaster.TopYesNo", @class = "form-control input-sm" })
                </td>
                <td>
                    <p data-ng-hide="testmaster.editMode"><a data-ng-click="toggleEdit(testmaster)" href="javascript:;">Edit</a> @*| <a data-ng-click="delete(testmaster)" href="javascript:;">Delete</a>*@</p>
                    <p data-ng-show="testmaster.editMode"><a data-ng-click="save(testmaster)" href="javascript:;">Save</a> | <a data-ng-click="toggleEdit_Cancel(testmaster)" href="javascript:;">Cancel</a></p>

                </td>
            </tr>
        </table>
     
    </div>
    
    
       //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlonPos").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
                $("#latlonRms").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>

    

}

<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>





<script src="~/Scripts/angularjs/1.0.5/angular.js"></script>
<script src="~/Scripts/TestMaster/TestMaster2.js"></script>

<script src="~/Scripts/angularjs/ui-bootstrap-tpls-0.4.0.js"></script>




<script src="~/Scripts/Underscore.js"></script>