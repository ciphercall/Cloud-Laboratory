@using AslLabApi.Models
@model AslLabApi.Models.DTO.ReferDTO


@{
    ViewBag.Title = "Index";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();
    var LoggedUserId = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedUserID"]);

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "AslSuperadmin") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }
    var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    Int64 compid = Convert.ToInt64(LoggedCompId);

    AslLabApiContext db = new AslLabApiContext();

    List<SelectListItem> listOfCategory = new List<SelectListItem>();
    var listCat = (from n in db.HMS_TESTMST where n.COMPID == compid select n).ToList();
    foreach (var item in listCat)
    {
        listOfCategory.Add(new SelectListItem { Text = item.TCATNM, Value = Convert.ToString(item.TCATID) });
    }



}

<link href="~/Content/newcss/jquery-ui.css" rel="stylesheet" />


<link href="~/Content/newcss/ng-grid.css" rel="stylesheet" />
<link rel="stylesheet" href="~/Content/style.css" />








<script src="~/Content/jquery1.8.0/jquery.min.js"></script>


<script src="~/Content/jquery1.9.1/jquery-1.9.1.js"></script>


<script src="~/Content/jquery1.10.3/jquery-ui.js"></script>






@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)




    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Refer Information</h1>
        
        <div class="btn-group pull-right" id="editOption">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                <i class="fa fa-cog"></i>
            </button>
            <ul class="dropdown-menu pull-right" style="" role="menu">

                <li>
                    <a href="@Url.Action("Index", "Refer")"><i class="fa fa-plus"></i> Create</a>
                </li>
                <li>
                    <a href="@Url.Action("Update", "Refer")"><i class="fa fa-edit"></i> Update</a>
                </li>
                @*<li>
                    <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                </li>*@

            </ul>
        </div>

    </div>
    <br />
    <div class="col-md-12">
    <div ng-app="ReferApp" data-ng-controller="ApiReferController" @*class="container"*@>

      

        <div class="form-group">
           
            <div class="row">
                @Html.HiddenFor(model => model.COMPID, new { id = "txtcompid", style = "width:3em;", @Value = compid })
                @Html.HiddenFor(model => model.ReferGroupId, new { id = "ReferGroupId", style = "width:3em;" })
                @Html.HiddenFor(model => model.ReferId, new { id = "ReferId", style = "width:3em;" })
                <div class="col-md-2">
                    <label>Refer Name</label>
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.ReferName, new { id = "ReferName", @class = "form-control" })
                </div>
               
            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    <label>Title</label>
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Title, new { id = "Title", @class = "form-control" })
                </div>

            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    <label>Address</label>
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.Address, new { id = "Address", @class = "form-control" })
                </div>

            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    <label>Mobile No 1</label>
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.MobileNo1, new { id = "MobileNo1", @class = "form-control" })
                </div>

            </div>
            <br />
           
            <div class="row">
                <div class="col-md-2">
                    <label>Mobile No 2</label>
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.MobileNo2, new { id = "MobileNo2", @class = "form-control" })
                </div>

            </div>
            <br />
            <div class="row">
                <div class="col-md-2">
                    <label>Email ID</label>
                </div>
                <div class="col-md-8">
                    @Html.TextBoxFor(model => model.EmailId, new { id = "EmailId", @class = "form-control" })
                </div>

            </div>
            <br />
           
            <div class="row">
                <div class="col-md-2">

                </div>
                <div class="col-md-2">
                    <input type="submit" value="Submit" data-ng-click="add($event)" class="btn btn-primary" />
                </div>
                <div class="col-md-6">
                    <input type="submit" value="Refresh" class="btn btn-primary" />
                </div>
            </div>
          
           
           
        </div>
           


            @*<table class="table table-bordered table-hover col-md-12">

                <tr>
                  
                    <td class="col-md-1"><label>Category</label>
                    <td class="col-md-3">@Html.DropDownListFor(model => model.TCatId, listOfCategory, "-Select-", new { id = "TCatId", data_ng_model = "newChild.TCatId", @class = "form-control input-sm" })</td>
                    <td class="col-md-1"> <label>RF(%)</label></td>
                    <td class="col-md-1">
                        @Html.TextBoxFor(model => model.ReferPCNT, new { data_ng_model = "newChild.ReferPCNT", id = "ReferPCNT", @class = "form-control" })
                     
                    </td>
                    <td class="col-md-1"><label>Remarks</label></td>
                    <td class="col-md-3">
                        @Html.TextBoxFor(model => model.Remarks, new { data_ng_model = "newChild.Remarks", id = "Remarks", @class = "form-control" })
                   
                    </td>
                    <td class="col-md-2"><input type="submit" value="Insert" data-ng-click="addrow($event)" class="btn btn-primary" /></td>
                </tr>
                <tr data-ng-repeat="item in ReferData">

                    <td hidden><strong data-ng-hide="item.editMode">{{item.ID}}</strong></td>


                    <td colspan="2">
                        <p data-ng-hide="item.editMode">{{ item.TCatname }}</p>
                        @Html.DropDownListFor(model => model.TCatId, listOfCategory, "-Select-", new { data_ng_show = "item.editMode", data_ng_model = "item.TCatId", @class = "form-control input-sm" })
                       
                    </td>
                    <td colspan="2">
                        <p data-ng-hide="item.editMode">{{ item.ReferPCNT }}</p>

                        <input data-ng-show="item.editMode" type="text" data-ng-model="item.ReferPCNT" />
                    </td>
                    <td colspan="2">
                        <p data-ng-hide="item.editMode">{{ item.Remarks }}</p>

                        <input data-ng-show="item.editMode" type="text" data-ng-model="item.Remarks" />
                    </td>

                    <td>
                        <p data-ng-hide="item.editMode"><a data-ng-click="toggleEdit(item)" href="javascript:;">Edit</a> | <a data-ng-click="deleteitem(item)" href="javascript:;">Delete</a></p>
                        <p data-ng-show="item.editMode"><a data-ng-click="save(item)" href="javascript:;">Save</a> | <a data-ng-click="toggleEdit(item)" href="javascript:;">Cancel</a></p>

                    </td>
                </tr>
            </table>*@
            <hr />

        @Html.TextBoxFor(model => model.INSLTUDE, new { id = "latlonPos", style = "display: none;" })
        <input id="lat" type="hidden" />
        <input id="lon" type="hidden" />
        @Html.TextBoxFor(model => model.INSUSERID, new { id = "InsUserID", style = "display: none;", @Value = LoggedUserId })



        </div>
    </div>



    //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlonPos").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
                $("#latlonRms").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>



    <script type="text/javascript">

        $(document).ready(function () {
            //$('#ReferName').autocomplete({
            //    source: function (request, response) {
            //        var changedText2 = $("#txtcompid").val();
            //        $.ajax({

            //            url: '/api/ReferList',
            //            type: 'GET',
            //            cache: false,
            //            data: { query: request.term, query2: changedText2 },
            //            dataType: 'json',
            //            success: function (data) {
            //                response($.map(data, function (item) {
            //                    return {
            //                        label: item.ReferName,
            //                        value: item.ReferName,
            //                        id: item.ReferId,
            //                        gid: item.ReferGroupId,
            //                        title: item.Title,
            //                        address: item.Address,
            //                        mob1: item.MobileNo1,
            //                        mob2: item.MobileNo2,
            //                        email: item.EmailId
            //                    };
            //                }));
            //            }
            //        });
            //    },
            //    select: function (event, ui) {
            //        $('#ReferName').val(ui.item.label);
            //        $('#ReferId').val(ui.item.id);
            //        $('#ReferGroupId').val(ui.item.gid);

            //        $('#Title').val(ui.item.title);
            //        $('#Address').val(ui.item.address);
            //        $('#MobileNo1').val(ui.item.mob1);
            //        $('#MobileNo2').val(ui.item.mob2);
            //        $('#EmailId').val(ui.item.email);

            //        return false;
            //    },
            //    change: $('#ReferName').keyup(_.debounce(txtOneChanged, 1000))
            //});





        });
        function txtOneChanged() {


            var changedText = $("#ReferName").val();
            var changedText2 = $("#txtcompid").val();

            var Name = document.getElementById('ReferName');
            var txtBox = document.getElementById('ReferId');
            var txtBox2 = document.getElementById('ReferGroupId');

            var txtBox3 = document.getElementById('Title');
            var txtBox4 = document.getElementById('Address');
            var txtBox5 = document.getElementById('MobileNo1');
            var txtBox6 = document.getElementById('MobileNo2');
            var txtBox7 = document.getElementById('EmailId');

            if (changedText != "") {

                $.getJSON(
                    '/api/DynamicRefer', { "ChangedText": changedText, "ChangedText2": changedText2 },
                    function (result) {
                        Name.value = result[0].ReferName;
                        txtBox.value = result[0].ReferId;

                        txtBox2.value = result[0].ReferGroupId;
                        txtBox3.value = result[0].Title;
                        txtBox4.value = result[0].Address;
                        txtBox5.value = result[0].MobileNo1;
                        txtBox6.value = result[0].MobileNo2;
                        txtBox7.value = result[0].EmailId;


                        //if (result[0].TestCatId != 0) {
                        //    $("#DepartmentId").attr("disabled", "disabled");
                        //} else {

                        //    $('#DepartmentId').removeAttr('disabled');
                        //}



                    });

            }



        }

    </script>





}

<link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-1.9.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>
@*<script src="~/Content/jquery1.8.0/jquery.min.js"></script>
    <script src="~/Content/jquery1.9.1/jquery-1.9.1.js"></script>*@


@*<script src="~/Content/jquery1.10.3/jquery-ui.js"></script>*@




<script src="~/Scripts/angularjs/1.0.5/angular.js"></script>

<script src="~/Scripts/Refer/Refer.js"></script>

<script src="~/Scripts/angularjs/ui-bootstrap-tpls-0.4.0.js"></script>




<script src="~/Scripts/Underscore.js"></script>

@*<script src="~/Scripts/angularjs/ng-grid.debug.js"></script>*@













