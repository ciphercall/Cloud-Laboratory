@using AslLabApi.Models
@model AslLabApi.Models.DTO.TestMasterDTO


@{
    ViewBag.Title = "Index";

    if (HttpContext.Current.Session["LoggedUserType"] == null)
    {
        Response.Redirect(Url.Action("Index", "Login"));
    }

    var LoggedUserTp = HttpContext.Current.Session["LoggedUserType"].ToString();
    var LoggedUserStatus = HttpContext.Current.Session["LoggedUserStatus"].ToString();
    var LoggedCompanyStatus = HttpContext.Current.Session["LoggedCompanyStatus"].ToString();

    var LoggedUserId = Convert.ToInt64(System.Web.HttpContext.Current.Session["loggedUserID"]);

    if ((LoggedUserTp == "CompanyAdmin" || LoggedUserTp == "AslSuperadmin") && LoggedUserStatus == "A" && LoggedCompanyStatus == "A")
    {

    }
    else
    {
        Response.Redirect(Url.Action("Index", "Logout"));
    }
      var LoggedCompId = HttpContext.Current.Session["loggedCompID"].ToString();
    Int64 compid = Convert.ToInt64(LoggedCompId);
    
    AslLabApiContext db=new AslLabApiContext();
    
    List<SelectListItem>listdept=new List<SelectListItem>();
    var listofDept = (from n in db.HMS_DEPT where n.COMPID == compid select n).ToList();
    foreach (var item in listofDept)
    {
        listdept.Add(new SelectListItem{Text=item.DEPTNM, Value=Convert.ToString(item.DEPTID)});
    }

    List<SelectListItem> listTop = new List<SelectListItem>();

    listTop.Add(new SelectListItem { Text = "Yes", Value = "Y" });
    listTop.Add(new SelectListItem { Text = "No", Value = "N" });
 
 
    
}

<link href="~/Content/newcss/jquery-ui.css" rel="stylesheet" />


<link href="~/Content/newcss/ng-grid.css" rel="stylesheet" />
<link rel="stylesheet" href="~/Content/style.css" />








<script src="~/Content/jquery1.8.0/jquery.min.js"></script>


<script src="~/Content/jquery1.9.1/jquery-1.9.1.js"></script>


<script src="~/Content/jquery1.10.3/jquery-ui.js"></script>



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)




    <div id="contentHeaderBox">
        <h1 style="padding-left:16px">Test Category Information</h1>

        <div class="btn-group pull-right" id="editOption">
            <button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" data-hover="dropdown" aria-expanded="false">
                <i class="fa fa-cog"></i>
            </button>
            <ul class="dropdown-menu pull-right" style="" role="menu">

                <li>
                    <a href="@Url.Action("Index", "TestMaster")"><i class="fa fa-plus"></i> Create</a>
                </li>
                <li>
                    <a href="@Url.Action("Update", "TestMaster")"><i class="fa fa-edit"></i> Update</a>
                </li>
                @*<li>
                    <a href="@Url.Action("Delete", "JobInformation")"><i class="fa fa-times"></i> Delete</a>
                </li>*@

            </ul>
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-12">

            <div ng-app="testmasterApp" data-ng-controller="ApiTestMasterController" @*class="container"*@>

                <div class="row">
                    @Html.HiddenFor(model => model.COMPID, new { id = "txtcompid", style = "width:3em;", @Value = compid })
                    @Html.HiddenFor(model => model.TestCatId, new { id = "TestCatId", style = "width:3em;" })
                    <div class="col-md-4">
                        <label>Category Name</label>
                        <span>
                            @Html.TextBoxFor(model => model.TestCatName, new { @class = "form-control input-sm", id = "TestCatName" })
                        </span>
                    </div>
                    <div class="col-md-4">
                        <label>Department Name</label>
                        <span>
                            @Html.DropDownListFor(model => model.DepartmentId, listdept, "--Select--", new { id = "DepartmentId", @class = "form-control" })
                        </span>
                    </div>
                    <div class="col-md-2">
                        <label>Top</label>
                        <span>
                            @Html.DropDownListFor(model => model.TopYesNo, listTop, "--Select--", new { id = "TopYN", @class = "form-control" })
                        </span>
                       


                    </div>
                    <div class="col-md-2">
                       
                            <input style="margin-top: 22px" type="submit" value="Add" data-ng-click="add($event)" class="btn btn-primary" />
                       
                       
                    </div>
                </div>

             

              
             

             


                <br /><br />









                <table class="table table-bordered table-hover col-md-12">

                    <tr>

                        <td class="col-md-4"><label>Test Name:</label></td>
                        <td class="col-md-2"><label>Rate:</label></td>
                        <td class="col-md-2"><label>Discount(%):</label></td>
                        <td class="col-md-4"></td>


                    </tr>
                    <tr>

                        <td class="col-md-4">
                            @Html.TextBoxFor(model => model.TestName, new {data_ng_model="newChild.TestName", @class = "form-control", id = "testnm" })
                            @*<input type="text" data-ng-model="newChild.TestName" id="testnm" required />*@
                        </td>
                        <td class="col-md-2">
                            @Html.TextBoxFor(model => model.Rate, new { data_ng_model = "newChild.Rate", @class = "form-control", id = "rate" })                        
    @*<input type="text" data-ng-model="newChild.Rate" id="rate" required />*@
                        </td>
                        <td class="col-md-2">
                            @Html.TextBoxFor(model => model.PcnTD, new { data_ng_model = "newChild.PcnTD", @class = "form-control", id = "pcntd" })
                            
                            @*<input type="text" data-ng-model="newChild.PcnTD" id="pcntd" required />*@
                        </td>
                        <td class="col-md-4"><input type="submit" value="Insert" data-ng-click="addrow($event)" class="btn btn-primary" /></td>


                    </tr>
                    <tr data-ng-repeat="testitem in TestMasterData">

                        <td hidden><strong data-ng-hide="testitem.editMode">{{testitem.ID}}</strong></td>
                        <td hidden>
                            <p data-ng-hide="testitem.editMode">{{ testitem.TestCatId }}</p>

                        </td>
                        <td hidden>
                            <p data-ng-hide="testitem.editMode">{{ testitem.DepartmentId }}</p>

                        </td>
                        <td hidden>
                            <p data-ng-hide="testitem.editMode">{{ testitem.TestId }}</p>

                        </td>
                        <td>
                            <p data-ng-hide="testitem.editMode">{{ testitem.TestName }}</p>

                            <input data-ng-show="testitem.editMode" type="text" data-ng-model="testitem.TestName" id="gridTestName" />
                        </td>
                        <td>
                            <p data-ng-hide="testitem.editMode">{{ testitem.Rate }}</p>
                            <input data-ng-show="testitem.editMode" type="text" data-ng-model="testitem.Rate" id="gridRate" />
                        </td>
                        <td>
                            <p data-ng-hide="testitem.editMode">{{ testitem.PcnTD }}</p>
                            <input data-ng-show="testitem.editMode" type="text" data-ng-model="testitem.PcnTD" id="gridPcnTD" />
                        </td>

                        <td>
                            <p data-ng-hide="testitem.editMode"><a data-ng-click="toggleEdit(testitem)" href="javascript:;">Edit</a> | <a data-ng-click="deleteTestitem(testitem)" href="javascript:;">Delete</a></p>
                            <p data-ng-show="testitem.editMode"><a data-ng-click="save(testitem)" href="javascript:;">Save</a> | <a data-ng-click="toggleEdit(testitem)" href="javascript:;">Cancel</a></p>

                        </td>
                    </tr>
                </table>
                <hr />
                @Html.TextBoxFor(model => model.INSLTUDE, new { id = "latlonPos", style = "display: none;" })
                <input id="lat" type="hidden" />
                <input id="lon" type="hidden" />
                @Html.TextBoxFor(model => model.INSUSERID, new { id = "InsUserID", style = "display: none;", @Value = LoggedUserId })




            </div>
        </div>
        
    </div>
   
     
      //Latitute & longitude
    <script src="http://maps.google.com/maps/api/js?sensor=false">
    </script>

    <script language="javascript" type="text/javascript">
        $(function () {
            navigator.geolocation.getCurrentPosition(showPosition);
            //navigator.geolocation.getCurrentPosition(showPosition, positionError);

            function showPosition(position) {
                var coordinates = position.coords;
                $("#lat").val(coordinates.latitude);
                $("#lon").val(coordinates.longitude);

                $("#latlonPos").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
                $("#latlonRms").val(
                    $("#lat").val() + "," + $("#lon").val()
                );
            }
        });
    </script>








    <script type="text/javascript">

        $(document).ready(function () {
            $('#TestCatName').autocomplete({
                source: function (request, response) {
                    var compid = $('#txtcompid').val();
                    $.ajax({

                        url: '/api/TestCatList',
                        type: 'GET',
                        cache: false,
                        data: { query: request.term, query2: compid },
                        dataType: 'json',
                        success: function (data) {
                            response($.map(data, function (item) {
                                return {
                                    label: item.TestCatName,
                                    value: item.TestCatName,
                                    id: item.TestCatId,
                                    deptid: item.DepartmentId,
                                    topyn: item.TopYesNo
                                };
                            }));
                        }
                    });
                },
                select: function (event, ui) {
                    $('#TestCatName').val(ui.item.label);
                    $('#TestCatId').val(ui.item.id);
                    $('#DepartmentId').val(ui.item.deptid);
                    $('#TopYN').val(ui.item.TopYesNo);
                    
                    
                    txtOneChanged();
                    //return false;
                },
                change: $('#TestCatName').keyup(_.debounce(txtOneChanged, 1000))
            });
            //$('#Updateid').click(function() {
                
            //});


        });
        function txtOneChanged() {


            var changedText = $("#TestCatName").val();
            var changedText2 = $('#txtcompid').val();

            var Name = document.getElementById('TestCatName');
            var txtBox = document.getElementById('TestCatId');
            var txtBox2 = document.getElementById('DepartmentId');

            var txtBox3 = document.getElementById('TopYN');
            if (changedText != "") {

                $.getJSON(
                    '/api/DynamicTestMasterCat', { "ChangedText": changedText, "ChangedText2": changedText2 },
                    function (result) {
                        Name.value = result[0].TestCatName;
                        txtBox.value = result[0].TestCatId;
                        
                        txtBox2.value = result[0].DepartmentId;
                        txtBox3.value = result[0].TopYesNo;
                        if (result[0].TestCatId != 0) {
                            $("#DepartmentId").attr("disabled", "disabled");
                            $("#TopYN").attr("disabled", "disabled");

                        } else {
                          
                            $('#DepartmentId').removeAttr('disabled');
                            $('#TopYN').removeAttr('disabled');
                        }
                        
                     
                    
                    });
               
            }



        }

    </script>





}

<script src="~/Scripts/jquery-ui-1.10.4.min.js"></script>





<script src="~/Scripts/angularjs/1.0.5/angular.js"></script>
<script src="~/Scripts/TestMaster/TestMaster.js"></script>

<script src="~/Scripts/angularjs/ui-bootstrap-tpls-0.4.0.js"></script>




<script src="~/Scripts/Underscore.js"></script>







